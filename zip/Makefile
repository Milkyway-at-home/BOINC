# Makefile.in generated by automake 1.6.3 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = /bin/sh

srcdir = .
top_srcdir = .

prefix = /usr/local
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/boinc_zip
pkglibdir = $(libdir)/boinc_zip
pkgincludedir = $(includedir)/boinc_zip
top_builddir = .

ACLOCAL = ${SHELL} /var/home/carlc/cpdnboinc/boinc/missing --run aclocal-1.6
AUTOCONF = ${SHELL} /var/home/carlc/cpdnboinc/boinc/missing --run autoconf
AUTOMAKE = ${SHELL} /var/home/carlc/cpdnboinc/boinc/missing --run automake-1.6
AUTOHEADER = ${SHELL} /var/home/carlc/cpdnboinc/boinc/missing --run autoheader

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = 
build_triplet = i686-pc-linux-gnu
host_alias = 
host_triplet = i686-pc-linux-gnu
target_alias = 
target_triplet = i686-pc-linux-gnu

EXEEXT = 
OBJEXT = o
PATH_SEPARATOR = :
AMTAR = ${SHELL} /var/home/carlc/cpdnboinc/boinc/missing --run tar
AWK = gawk
CC = gcc
CLIENT_BIN_FILENAME = boinc_1.00_i686-pc-linux-gnu
CPP = gcc -E
CXX = g++
DEPDIR = .deps
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
MAINT = #
MAJOR_VERSION = 1
MINOR_VERSION = 
PACKAGE = boinc_zip
RANLIB = ranlib
STRIP = 
TOP_BUILD_DIR = /var/home/carlc/cpdnboinc/boinc/zip
TOP_SOURCE_DIR = /var/home/carlc/cpdnboinc/boinc/zip
VERSION = 1.00
am__include = include
am__quote = 
install_sh = /var/home/carlc/cpdnboinc/boinc/install-sh

AM_CPPFLAGS = \
 -I./zip \
 -I./unzip \
 -I../lib \
 -DUNIX


noinst_LIBRARIES = libboinc_zip.a

libboinc_zip_a_SOURCES = boinc_zip.cpp \
./unzip/apihelp.c \
./unzip/crc32.c \
./unzip/crctab.c \
./unzip/envargs.c \
./unzip/explode.c \
./unzip/extract.c \
./unzip/fileio.c \
./unzip/globals.c \
./unzip/inflate.c \
./unzip/list.c \
./unzip/match.c \
./unzip/process.c \
./unzip/ttyio.c \
./unzip/unreduce.c \
./unzip/unshrink.c \
./unzip/unzip.c \
./unzip/zipinfo.c \
./zip/deflate.c \
./zip/mktime.c \
./zip/trees.c \
./zip/util.c \
./zip/z_fileio.c \
./zip/z_globals.c \
./zip/zip.c \
./zip/zipfile.c \
./zip/zipup.c \
./zip/unix/z_unix.c \
./unzip/unix/unix.c 

subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)

libboinc_zip_a_AR = $(AR) cru
libboinc_zip_a_LIBADD =
am_libboinc_zip_a_OBJECTS = boinc_zip.$(OBJEXT) apihelp.$(OBJEXT) \
	crc32.$(OBJEXT) crctab.$(OBJEXT) envargs.$(OBJEXT) \
	explode.$(OBJEXT) extract.$(OBJEXT) fileio.$(OBJEXT) \
	globals.$(OBJEXT) inflate.$(OBJEXT) list.$(OBJEXT) \
	match.$(OBJEXT) process.$(OBJEXT) ttyio.$(OBJEXT) \
	unreduce.$(OBJEXT) unshrink.$(OBJEXT) unzip.$(OBJEXT) \
	zipinfo.$(OBJEXT) deflate.$(OBJEXT) mktime.$(OBJEXT) \
	trees.$(OBJEXT) util.$(OBJEXT) z_fileio.$(OBJEXT) \
	z_globals.$(OBJEXT) zip.$(OBJEXT) zipfile.$(OBJEXT) \
	zipup.$(OBJEXT) z_unix.$(OBJEXT) unix.$(OBJEXT)
libboinc_zip_a_OBJECTS = $(am_libboinc_zip_a_OBJECTS)

DEFS = -DHAVE_CONFIG_H
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I.
CPPFLAGS = 
LDFLAGS = 
LIBS = -lz -lnsl -lm 
depcomp = $(SHELL) $(top_srcdir)/../depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/apihelp.Po ./$(DEPDIR)/boinc_zip.Po \
	./$(DEPDIR)/crc32.Po ./$(DEPDIR)/crctab.Po \
	./$(DEPDIR)/deflate.Po ./$(DEPDIR)/envargs.Po \
	./$(DEPDIR)/explode.Po ./$(DEPDIR)/extract.Po \
	./$(DEPDIR)/fileio.Po ./$(DEPDIR)/globals.Po \
	./$(DEPDIR)/inflate.Po ./$(DEPDIR)/list.Po \
	./$(DEPDIR)/match.Po ./$(DEPDIR)/mktime.Po \
	./$(DEPDIR)/process.Po ./$(DEPDIR)/trees.Po \
	./$(DEPDIR)/ttyio.Po ./$(DEPDIR)/unix.Po \
	./$(DEPDIR)/unreduce.Po ./$(DEPDIR)/unshrink.Po \
	./$(DEPDIR)/unzip.Po ./$(DEPDIR)/util.Po \
	./$(DEPDIR)/z_fileio.Po ./$(DEPDIR)/z_globals.Po \
	./$(DEPDIR)/z_unix.Po ./$(DEPDIR)/zip.Po \
	./$(DEPDIR)/zipfile.Po ./$(DEPDIR)/zipinfo.Po \
	./$(DEPDIR)/zipup.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = -g -O2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
CXXFLAGS = -g -O2
DIST_SOURCES = $(libboinc_zip_a_SOURCES)
DIST_COMMON = ../config.guess ../config.sub ../depcomp ../install-sh \
	../missing ../mkinstalldirs Makefile.am Makefile.in aclocal.m4 \
	config.h.in configure configure.ac
SOURCES = $(libboinc_zip_a_SOURCES)

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj

am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno
$(srcdir)/Makefile.in: # Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  Makefile
Makefile: # $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)

$(top_builddir)/config.status: $(srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck
$(srcdir)/configure: # $(srcdir)/configure.ac $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)
	cd $(srcdir) && $(AUTOCONF)

$(ACLOCAL_M4): # configure.ac 
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h

$(srcdir)/config.h.in: # $(top_srcdir)/configure.ac $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOHEADER)
	touch $(srcdir)/config.h.in

distclean-hdr:
	-rm -f config.h stamp-h1

AR = ar

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
apihelp.$(OBJEXT): ./unzip/apihelp.c
crc32.$(OBJEXT): ./unzip/crc32.c
crctab.$(OBJEXT): ./unzip/crctab.c
envargs.$(OBJEXT): ./unzip/envargs.c
explode.$(OBJEXT): ./unzip/explode.c
extract.$(OBJEXT): ./unzip/extract.c
fileio.$(OBJEXT): ./unzip/fileio.c
globals.$(OBJEXT): ./unzip/globals.c
inflate.$(OBJEXT): ./unzip/inflate.c
list.$(OBJEXT): ./unzip/list.c
match.$(OBJEXT): ./unzip/match.c
process.$(OBJEXT): ./unzip/process.c
ttyio.$(OBJEXT): ./unzip/ttyio.c
unreduce.$(OBJEXT): ./unzip/unreduce.c
unshrink.$(OBJEXT): ./unzip/unshrink.c
unzip.$(OBJEXT): ./unzip/unzip.c
zipinfo.$(OBJEXT): ./unzip/zipinfo.c
deflate.$(OBJEXT): ./zip/deflate.c
mktime.$(OBJEXT): ./zip/mktime.c
trees.$(OBJEXT): ./zip/trees.c
util.$(OBJEXT): ./zip/util.c
z_fileio.$(OBJEXT): ./zip/z_fileio.c
z_globals.$(OBJEXT): ./zip/z_globals.c
zip.$(OBJEXT): ./zip/zip.c
zipfile.$(OBJEXT): ./zip/zipfile.c
zipup.$(OBJEXT): ./zip/zipup.c
z_unix.$(OBJEXT): ./zip/unix/z_unix.c
unix.$(OBJEXT): ./unzip/unix/unix.c
libboinc_zip.a: $(libboinc_zip_a_OBJECTS) $(libboinc_zip_a_DEPENDENCIES) 
	-rm -f libboinc_zip.a
	$(libboinc_zip_a_AR) libboinc_zip.a $(libboinc_zip_a_OBJECTS) $(libboinc_zip_a_LIBADD)
	$(RANLIB) libboinc_zip.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/apihelp.Po
include ./$(DEPDIR)/boinc_zip.Po
include ./$(DEPDIR)/crc32.Po
include ./$(DEPDIR)/crctab.Po
include ./$(DEPDIR)/deflate.Po
include ./$(DEPDIR)/envargs.Po
include ./$(DEPDIR)/explode.Po
include ./$(DEPDIR)/extract.Po
include ./$(DEPDIR)/fileio.Po
include ./$(DEPDIR)/globals.Po
include ./$(DEPDIR)/inflate.Po
include ./$(DEPDIR)/list.Po
include ./$(DEPDIR)/match.Po
include ./$(DEPDIR)/mktime.Po
include ./$(DEPDIR)/process.Po
include ./$(DEPDIR)/trees.Po
include ./$(DEPDIR)/ttyio.Po
include ./$(DEPDIR)/unix.Po
include ./$(DEPDIR)/unreduce.Po
include ./$(DEPDIR)/unshrink.Po
include ./$(DEPDIR)/unzip.Po
include ./$(DEPDIR)/util.Po
include ./$(DEPDIR)/z_fileio.Po
include ./$(DEPDIR)/z_globals.Po
include ./$(DEPDIR)/z_unix.Po
include ./$(DEPDIR)/zip.Po
include ./$(DEPDIR)/zipfile.Po
include ./$(DEPDIR)/zipinfo.Po
include ./$(DEPDIR)/zipup.Po

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `cygpath -w $<`

apihelp.o: ./unzip/apihelp.c
	source='./unzip/apihelp.c' object='apihelp.o' libtool=no \
	depfile='$(DEPDIR)/apihelp.Po' tmpdepfile='$(DEPDIR)/apihelp.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o apihelp.o `test -f './unzip/apihelp.c' || echo '$(srcdir)/'`./unzip/apihelp.c

apihelp.obj: ./unzip/apihelp.c
	source='./unzip/apihelp.c' object='apihelp.obj' libtool=no \
	depfile='$(DEPDIR)/apihelp.Po' tmpdepfile='$(DEPDIR)/apihelp.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o apihelp.obj `cygpath -w ./unzip/apihelp.c`

crc32.o: ./unzip/crc32.c
	source='./unzip/crc32.c' object='crc32.o' libtool=no \
	depfile='$(DEPDIR)/crc32.Po' tmpdepfile='$(DEPDIR)/crc32.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crc32.o `test -f './unzip/crc32.c' || echo '$(srcdir)/'`./unzip/crc32.c

crc32.obj: ./unzip/crc32.c
	source='./unzip/crc32.c' object='crc32.obj' libtool=no \
	depfile='$(DEPDIR)/crc32.Po' tmpdepfile='$(DEPDIR)/crc32.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crc32.obj `cygpath -w ./unzip/crc32.c`

crctab.o: ./unzip/crctab.c
	source='./unzip/crctab.c' object='crctab.o' libtool=no \
	depfile='$(DEPDIR)/crctab.Po' tmpdepfile='$(DEPDIR)/crctab.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crctab.o `test -f './unzip/crctab.c' || echo '$(srcdir)/'`./unzip/crctab.c

crctab.obj: ./unzip/crctab.c
	source='./unzip/crctab.c' object='crctab.obj' libtool=no \
	depfile='$(DEPDIR)/crctab.Po' tmpdepfile='$(DEPDIR)/crctab.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crctab.obj `cygpath -w ./unzip/crctab.c`

envargs.o: ./unzip/envargs.c
	source='./unzip/envargs.c' object='envargs.o' libtool=no \
	depfile='$(DEPDIR)/envargs.Po' tmpdepfile='$(DEPDIR)/envargs.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o envargs.o `test -f './unzip/envargs.c' || echo '$(srcdir)/'`./unzip/envargs.c

envargs.obj: ./unzip/envargs.c
	source='./unzip/envargs.c' object='envargs.obj' libtool=no \
	depfile='$(DEPDIR)/envargs.Po' tmpdepfile='$(DEPDIR)/envargs.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o envargs.obj `cygpath -w ./unzip/envargs.c`

explode.o: ./unzip/explode.c
	source='./unzip/explode.c' object='explode.o' libtool=no \
	depfile='$(DEPDIR)/explode.Po' tmpdepfile='$(DEPDIR)/explode.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o explode.o `test -f './unzip/explode.c' || echo '$(srcdir)/'`./unzip/explode.c

explode.obj: ./unzip/explode.c
	source='./unzip/explode.c' object='explode.obj' libtool=no \
	depfile='$(DEPDIR)/explode.Po' tmpdepfile='$(DEPDIR)/explode.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o explode.obj `cygpath -w ./unzip/explode.c`

extract.o: ./unzip/extract.c
	source='./unzip/extract.c' object='extract.o' libtool=no \
	depfile='$(DEPDIR)/extract.Po' tmpdepfile='$(DEPDIR)/extract.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o extract.o `test -f './unzip/extract.c' || echo '$(srcdir)/'`./unzip/extract.c

extract.obj: ./unzip/extract.c
	source='./unzip/extract.c' object='extract.obj' libtool=no \
	depfile='$(DEPDIR)/extract.Po' tmpdepfile='$(DEPDIR)/extract.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o extract.obj `cygpath -w ./unzip/extract.c`

fileio.o: ./unzip/fileio.c
	source='./unzip/fileio.c' object='fileio.o' libtool=no \
	depfile='$(DEPDIR)/fileio.Po' tmpdepfile='$(DEPDIR)/fileio.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fileio.o `test -f './unzip/fileio.c' || echo '$(srcdir)/'`./unzip/fileio.c

fileio.obj: ./unzip/fileio.c
	source='./unzip/fileio.c' object='fileio.obj' libtool=no \
	depfile='$(DEPDIR)/fileio.Po' tmpdepfile='$(DEPDIR)/fileio.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fileio.obj `cygpath -w ./unzip/fileio.c`

globals.o: ./unzip/globals.c
	source='./unzip/globals.c' object='globals.o' libtool=no \
	depfile='$(DEPDIR)/globals.Po' tmpdepfile='$(DEPDIR)/globals.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o globals.o `test -f './unzip/globals.c' || echo '$(srcdir)/'`./unzip/globals.c

globals.obj: ./unzip/globals.c
	source='./unzip/globals.c' object='globals.obj' libtool=no \
	depfile='$(DEPDIR)/globals.Po' tmpdepfile='$(DEPDIR)/globals.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o globals.obj `cygpath -w ./unzip/globals.c`

inflate.o: ./unzip/inflate.c
	source='./unzip/inflate.c' object='inflate.o' libtool=no \
	depfile='$(DEPDIR)/inflate.Po' tmpdepfile='$(DEPDIR)/inflate.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o inflate.o `test -f './unzip/inflate.c' || echo '$(srcdir)/'`./unzip/inflate.c

inflate.obj: ./unzip/inflate.c
	source='./unzip/inflate.c' object='inflate.obj' libtool=no \
	depfile='$(DEPDIR)/inflate.Po' tmpdepfile='$(DEPDIR)/inflate.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o inflate.obj `cygpath -w ./unzip/inflate.c`

list.o: ./unzip/list.c
	source='./unzip/list.c' object='list.o' libtool=no \
	depfile='$(DEPDIR)/list.Po' tmpdepfile='$(DEPDIR)/list.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o list.o `test -f './unzip/list.c' || echo '$(srcdir)/'`./unzip/list.c

list.obj: ./unzip/list.c
	source='./unzip/list.c' object='list.obj' libtool=no \
	depfile='$(DEPDIR)/list.Po' tmpdepfile='$(DEPDIR)/list.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o list.obj `cygpath -w ./unzip/list.c`

match.o: ./unzip/match.c
	source='./unzip/match.c' object='match.o' libtool=no \
	depfile='$(DEPDIR)/match.Po' tmpdepfile='$(DEPDIR)/match.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o match.o `test -f './unzip/match.c' || echo '$(srcdir)/'`./unzip/match.c

match.obj: ./unzip/match.c
	source='./unzip/match.c' object='match.obj' libtool=no \
	depfile='$(DEPDIR)/match.Po' tmpdepfile='$(DEPDIR)/match.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o match.obj `cygpath -w ./unzip/match.c`

process.o: ./unzip/process.c
	source='./unzip/process.c' object='process.o' libtool=no \
	depfile='$(DEPDIR)/process.Po' tmpdepfile='$(DEPDIR)/process.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o process.o `test -f './unzip/process.c' || echo '$(srcdir)/'`./unzip/process.c

process.obj: ./unzip/process.c
	source='./unzip/process.c' object='process.obj' libtool=no \
	depfile='$(DEPDIR)/process.Po' tmpdepfile='$(DEPDIR)/process.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o process.obj `cygpath -w ./unzip/process.c`

ttyio.o: ./unzip/ttyio.c
	source='./unzip/ttyio.c' object='ttyio.o' libtool=no \
	depfile='$(DEPDIR)/ttyio.Po' tmpdepfile='$(DEPDIR)/ttyio.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ttyio.o `test -f './unzip/ttyio.c' || echo '$(srcdir)/'`./unzip/ttyio.c

ttyio.obj: ./unzip/ttyio.c
	source='./unzip/ttyio.c' object='ttyio.obj' libtool=no \
	depfile='$(DEPDIR)/ttyio.Po' tmpdepfile='$(DEPDIR)/ttyio.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ttyio.obj `cygpath -w ./unzip/ttyio.c`

unreduce.o: ./unzip/unreduce.c
	source='./unzip/unreduce.c' object='unreduce.o' libtool=no \
	depfile='$(DEPDIR)/unreduce.Po' tmpdepfile='$(DEPDIR)/unreduce.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o unreduce.o `test -f './unzip/unreduce.c' || echo '$(srcdir)/'`./unzip/unreduce.c

unreduce.obj: ./unzip/unreduce.c
	source='./unzip/unreduce.c' object='unreduce.obj' libtool=no \
	depfile='$(DEPDIR)/unreduce.Po' tmpdepfile='$(DEPDIR)/unreduce.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o unreduce.obj `cygpath -w ./unzip/unreduce.c`

unshrink.o: ./unzip/unshrink.c
	source='./unzip/unshrink.c' object='unshrink.o' libtool=no \
	depfile='$(DEPDIR)/unshrink.Po' tmpdepfile='$(DEPDIR)/unshrink.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o unshrink.o `test -f './unzip/unshrink.c' || echo '$(srcdir)/'`./unzip/unshrink.c

unshrink.obj: ./unzip/unshrink.c
	source='./unzip/unshrink.c' object='unshrink.obj' libtool=no \
	depfile='$(DEPDIR)/unshrink.Po' tmpdepfile='$(DEPDIR)/unshrink.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o unshrink.obj `cygpath -w ./unzip/unshrink.c`

unzip.o: ./unzip/unzip.c
	source='./unzip/unzip.c' object='unzip.o' libtool=no \
	depfile='$(DEPDIR)/unzip.Po' tmpdepfile='$(DEPDIR)/unzip.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o unzip.o `test -f './unzip/unzip.c' || echo '$(srcdir)/'`./unzip/unzip.c

unzip.obj: ./unzip/unzip.c
	source='./unzip/unzip.c' object='unzip.obj' libtool=no \
	depfile='$(DEPDIR)/unzip.Po' tmpdepfile='$(DEPDIR)/unzip.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o unzip.obj `cygpath -w ./unzip/unzip.c`

zipinfo.o: ./unzip/zipinfo.c
	source='./unzip/zipinfo.c' object='zipinfo.o' libtool=no \
	depfile='$(DEPDIR)/zipinfo.Po' tmpdepfile='$(DEPDIR)/zipinfo.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zipinfo.o `test -f './unzip/zipinfo.c' || echo '$(srcdir)/'`./unzip/zipinfo.c

zipinfo.obj: ./unzip/zipinfo.c
	source='./unzip/zipinfo.c' object='zipinfo.obj' libtool=no \
	depfile='$(DEPDIR)/zipinfo.Po' tmpdepfile='$(DEPDIR)/zipinfo.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zipinfo.obj `cygpath -w ./unzip/zipinfo.c`

deflate.o: ./zip/deflate.c
	source='./zip/deflate.c' object='deflate.o' libtool=no \
	depfile='$(DEPDIR)/deflate.Po' tmpdepfile='$(DEPDIR)/deflate.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o deflate.o `test -f './zip/deflate.c' || echo '$(srcdir)/'`./zip/deflate.c

deflate.obj: ./zip/deflate.c
	source='./zip/deflate.c' object='deflate.obj' libtool=no \
	depfile='$(DEPDIR)/deflate.Po' tmpdepfile='$(DEPDIR)/deflate.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o deflate.obj `cygpath -w ./zip/deflate.c`

mktime.o: ./zip/mktime.c
	source='./zip/mktime.c' object='mktime.o' libtool=no \
	depfile='$(DEPDIR)/mktime.Po' tmpdepfile='$(DEPDIR)/mktime.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mktime.o `test -f './zip/mktime.c' || echo '$(srcdir)/'`./zip/mktime.c

mktime.obj: ./zip/mktime.c
	source='./zip/mktime.c' object='mktime.obj' libtool=no \
	depfile='$(DEPDIR)/mktime.Po' tmpdepfile='$(DEPDIR)/mktime.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mktime.obj `cygpath -w ./zip/mktime.c`

trees.o: ./zip/trees.c
	source='./zip/trees.c' object='trees.o' libtool=no \
	depfile='$(DEPDIR)/trees.Po' tmpdepfile='$(DEPDIR)/trees.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o trees.o `test -f './zip/trees.c' || echo '$(srcdir)/'`./zip/trees.c

trees.obj: ./zip/trees.c
	source='./zip/trees.c' object='trees.obj' libtool=no \
	depfile='$(DEPDIR)/trees.Po' tmpdepfile='$(DEPDIR)/trees.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o trees.obj `cygpath -w ./zip/trees.c`

util.o: ./zip/util.c
	source='./zip/util.c' object='util.o' libtool=no \
	depfile='$(DEPDIR)/util.Po' tmpdepfile='$(DEPDIR)/util.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o util.o `test -f './zip/util.c' || echo '$(srcdir)/'`./zip/util.c

util.obj: ./zip/util.c
	source='./zip/util.c' object='util.obj' libtool=no \
	depfile='$(DEPDIR)/util.Po' tmpdepfile='$(DEPDIR)/util.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o util.obj `cygpath -w ./zip/util.c`

z_fileio.o: ./zip/z_fileio.c
	source='./zip/z_fileio.c' object='z_fileio.o' libtool=no \
	depfile='$(DEPDIR)/z_fileio.Po' tmpdepfile='$(DEPDIR)/z_fileio.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o z_fileio.o `test -f './zip/z_fileio.c' || echo '$(srcdir)/'`./zip/z_fileio.c

z_fileio.obj: ./zip/z_fileio.c
	source='./zip/z_fileio.c' object='z_fileio.obj' libtool=no \
	depfile='$(DEPDIR)/z_fileio.Po' tmpdepfile='$(DEPDIR)/z_fileio.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o z_fileio.obj `cygpath -w ./zip/z_fileio.c`

z_globals.o: ./zip/z_globals.c
	source='./zip/z_globals.c' object='z_globals.o' libtool=no \
	depfile='$(DEPDIR)/z_globals.Po' tmpdepfile='$(DEPDIR)/z_globals.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o z_globals.o `test -f './zip/z_globals.c' || echo '$(srcdir)/'`./zip/z_globals.c

z_globals.obj: ./zip/z_globals.c
	source='./zip/z_globals.c' object='z_globals.obj' libtool=no \
	depfile='$(DEPDIR)/z_globals.Po' tmpdepfile='$(DEPDIR)/z_globals.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o z_globals.obj `cygpath -w ./zip/z_globals.c`

zip.o: ./zip/zip.c
	source='./zip/zip.c' object='zip.o' libtool=no \
	depfile='$(DEPDIR)/zip.Po' tmpdepfile='$(DEPDIR)/zip.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zip.o `test -f './zip/zip.c' || echo '$(srcdir)/'`./zip/zip.c

zip.obj: ./zip/zip.c
	source='./zip/zip.c' object='zip.obj' libtool=no \
	depfile='$(DEPDIR)/zip.Po' tmpdepfile='$(DEPDIR)/zip.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zip.obj `cygpath -w ./zip/zip.c`

zipfile.o: ./zip/zipfile.c
	source='./zip/zipfile.c' object='zipfile.o' libtool=no \
	depfile='$(DEPDIR)/zipfile.Po' tmpdepfile='$(DEPDIR)/zipfile.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zipfile.o `test -f './zip/zipfile.c' || echo '$(srcdir)/'`./zip/zipfile.c

zipfile.obj: ./zip/zipfile.c
	source='./zip/zipfile.c' object='zipfile.obj' libtool=no \
	depfile='$(DEPDIR)/zipfile.Po' tmpdepfile='$(DEPDIR)/zipfile.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zipfile.obj `cygpath -w ./zip/zipfile.c`

zipup.o: ./zip/zipup.c
	source='./zip/zipup.c' object='zipup.o' libtool=no \
	depfile='$(DEPDIR)/zipup.Po' tmpdepfile='$(DEPDIR)/zipup.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zipup.o `test -f './zip/zipup.c' || echo '$(srcdir)/'`./zip/zipup.c

zipup.obj: ./zip/zipup.c
	source='./zip/zipup.c' object='zipup.obj' libtool=no \
	depfile='$(DEPDIR)/zipup.Po' tmpdepfile='$(DEPDIR)/zipup.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zipup.obj `cygpath -w ./zip/zipup.c`

z_unix.o: ./zip/unix/z_unix.c
	source='./zip/unix/z_unix.c' object='z_unix.o' libtool=no \
	depfile='$(DEPDIR)/z_unix.Po' tmpdepfile='$(DEPDIR)/z_unix.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o z_unix.o `test -f './zip/unix/z_unix.c' || echo '$(srcdir)/'`./zip/unix/z_unix.c

z_unix.obj: ./zip/unix/z_unix.c
	source='./zip/unix/z_unix.c' object='z_unix.obj' libtool=no \
	depfile='$(DEPDIR)/z_unix.Po' tmpdepfile='$(DEPDIR)/z_unix.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o z_unix.obj `cygpath -w ./zip/unix/z_unix.c`

unix.o: ./unzip/unix/unix.c
	source='./unzip/unix/unix.c' object='unix.o' libtool=no \
	depfile='$(DEPDIR)/unix.Po' tmpdepfile='$(DEPDIR)/unix.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o unix.o `test -f './unzip/unix/unix.c' || echo '$(srcdir)/'`./unzip/unix/unix.c

unix.obj: ./unzip/unix/unix.c
	source='./unzip/unix/unix.c' object='unix.obj' libtool=no \
	depfile='$(DEPDIR)/unix.Po' tmpdepfile='$(DEPDIR)/unix.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o unix.obj `cygpath -w ./unzip/unix/unix.c`
CCDEPMODE = depmode=gcc3

.cpp.o:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`
CXXDEPMODE = depmode=gcc3
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = .
distdir = $(PACKAGE)-$(VERSION)

am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }

GZIP_ENV = --best
distcleancheck_listfiles = find . -type f -print

distdir: $(DISTFILES)
	$(am__remove_distdir)
	mkdir $(distdir)
	$(mkinstalldirs) $(distdir)/..
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	$(am__remove_distdir)
	GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(AMTAR) xf -
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/=build
	mkdir $(distdir)/=inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/=inst && pwd` \
	  && cd $(distdir)/=build \
	  && ../configure --srcdir=.. --prefix=$$dc_install_base \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && (test `find $$dc_install_base -type f -print | wc -l` -le 1 \
	      || { echo "ERROR: files left after uninstall:" ; \
	           find $$dc_install_base -type f -print ; \
	           exit 1; } >&2 ) \
	  && $(MAKE) $(AM_MAKEFLAGS) dist-gzip \
	  && rm -f $(distdir).tar.gz \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@echo "$(distdir).tar.gz is ready for distribution" | \
	  sed 'h;s/./=/g;p;x;p;x'
distcleancheck: distclean
	if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) config.h

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf autom4te.cache
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES dist dist-all dist-gzip dist-zip \
	distcheck distclean distclean-compile distclean-depend \
	distclean-generic distclean-hdr distclean-tags distcleancheck \
	distdir dvi dvi-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic tags uninstall uninstall-am \
	uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
