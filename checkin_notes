David  3 Jan 2010
    - client: ATI available RAM wasn't being detected correctly

    client/
        coproc_detect.cpp

David  4 Jan 2010
    - web: don't show news items if they're hidden

    html/inc/
        news.inc

David  4 Jan 2010
	- client: RSS feed stuff

	client/
		cs_notice.cpp,h
	lib/
		notice.cpp

Rom    4 Jan 2010
    - lib: fixup notice RPCs to make them manager compatible.
    - lib: remove memset from notice constructor, bad things can happen
        when you null out a std::string structure.
        
    lib/
        gui_rpc_client.h
        gui_rpc_client_ops.cpp
        notice.cpp, .h

Rom    4 Jan 2010
    - MGR: Implement Notice RPC infrastructure.
    
    clientgui/
        AsyncRPC.cpp, .h
        MainDocument.cpp, .h

Rom    4 Jan 2010
    - MGR: Implement UI plumbing for notices

    clientgui/
        ViewNotifications.cpp, .h

Rom    4 Jan 2010
    - MGR: Display each notice in the notices tab.

    clientgui/
        MainDocument.cpp
        ViewNotifications.cpp, .h

David  4 Jan 2010
    - GUI RPC: return notices in order of increasing seqno, not decreasing
    client/
        cs_notice.cpp

Rom    4 Jan 2010
    - MGR: Present the newest notices first.

    clientgui/
        MainDocument.cpp
    lib/
        gui_rpc_client_ops.cpp

Bernd  5 Jan 2010
    a couple of locality scheduling fixes:
    - remove obsolete and buggy code from transitioner (create_result() in backend_lib)
    - account for 'mixed' scheduling in explain_to_user() in sched_send.cpp
    - finish transition to configurable patterns for distinguishing files reported by the client
      in the Einstein@home-specific part of send_work_locality in sched_locality
      (removed previous hardcoded strcmps)

    tools/
        backend_lib.cpp
    sched/
        sched_send.cpp
        sched_locality.cpp

David  4 Jan 2010
    - code shuffle

    client/
        work_fetch.cpp

David  4 Jan 2010
    - client: fix format strings for ninstances (can be fraction now)

    client/
        scheduler_op.cpp
        work_fetch.cpp

David  5 Jan 2010
    - client: scheduling problem:
        - a project overestimates job FLOP counts
        - the client starts jobs in EDF mode
        - as job progresses and fraction done increases,
            its completion time estimate decreases until
            it's no longer a deadline miss.
        - job gets preempted by other job from that project;
            you end up with lots of partly completed jobs.
        Solution (I hope): if an app version has running jobs,
            compute a "temp DCF" for the app version,
            which is the min of dynamic/static estimates for its jobs.
            Apply this scaling factor to completion time estimates
            for unstarted jobs in RR simulation
    - client: the estimation of remaining time of running jobs was wrong
        (how did this bug survive so long?)

    client/
        app.h
        client_types.h
        rr_sim.cpp
        work_fetch.cpp

Charlie  6 Jan 2010
    - client: Eliminate x86_64 Mac client; i386 client determines if 
        system supports x86_64 applications and sets HOSTTYPE and 
        platform accordingly.  This allows us to link with the 32-bit 
        CUDA libraries.  The one other effect is that the benchmarks 
        are run in 32-bit mode even on a 64-bit capable Mac.
    - client: Async get_state RPC was not updating state.have_ati field.
        
    client/
        cs_cmdline.cpp
        cs_platforms.cpp
    clientgui/
        AsyncRPC.cpp
        mac/
            config.h
     mac_build/
        boinc.xcodeproj/
            project.pbxproj
