David A.	April 10 2002
    Initial checkin of all files.
    The system is fairly feature-complete and
    runs a number of test cases correctly.
    Currently runs only on Linux.

David A.	April 11 2002
    - Got things to compile on Solaris.
    - Pass in platform name, version number from Makefile
	(platform name comes from configure)

David A.        May 15 2002
    - Allow applications to have multiple files
        (e.g. scripts, libraries, pre- and post-processing programs).
        The app_version table now has an xml_doc field,
        which contains a list of <file_info> and <file_ref> elements.
        Note: the utility for adding applications (tools/add.C)
        still handles only single-file applications.
    - Changed IO_FILE_DESC to FILE_REF since it now represents
        an association of a file to workunit, result or application

    client
        app.C
        client_state.C,h
        cs_apps.C
        cs_scheduler.C
        main.C
        message.h (new)
        parse.C,h
        scheduler_reply.C,h
        types.C,h
        Makefile.in
    db
        db.h
        db_mysql.C
        schema.sql
    doc
        app.html (new)
        files.html
        index.html
        intro.html
        project.gif
        project.html
        project.png
        protocol.html
        result.html (new)
        work.html
    html_user
        db.inc
    sched
        handle_request.C
        server_types.C,h
    test
        test_uc.php
        init.inc
    tools
        add.C
David A.        May 23 2002
    - Change the scheduling server to reduce database accesses.
        There's now a shared-memory segment that contains
        1) the platform, app, and app_version tables in their entirety;
        2) a fixed-size set of results ready to be sent,
            and their corresponding workunit.
        This segment is initialized and maintained by a new program
        called the "feeder" (sched/feeder.C) that should run
        whenever the scheduling server is up.
        Note: the scheduler still needs to be converted to fast CGI
    - Added handy interfaces for dealing with shared memory and semaphores.
    - Changed to utilities and scripts used for testing so that all
        server-specific names (paths and URLs) come from environment
        variables instead of being hardwired in the code.
        You'll want to add these to your .tcshrc or whatever.
        See the doc/install.html for details.

    Files:
    TODO
    apps/
        Makefile.in
    client/
        app.C
    db/
        db.h
    doc/
        index.html
        install.html
        intro.html
        tools.html (removed)
        tools_other.html
        tools_work.html
        work.html
    lib/
        Makefile.in
        md5_file.C
        shmem.C,h (new)
        shmem_test.C (new)
        synch.C,h (new)
        synch_test.C (new)
    sched/
        feeder.C (new)
        Makefile.in
        handle_request.C,h
        main.C
        sched_shmem.C,h (new)
        server_types.C,h
    test/
        account.xml (deleted)
        account1.xml
        init.inc
        test_uc.php
    tools/
        add.C
        create_work.C

Hiram C.	Fri May 24 23:34:59 PDT 2002
	files db/dependencies and client/config.status and client/config.log
		removed.  These are build time files and should not belong
		in the source tree.  They confuse subsequent builds.
	files updated: configure configure.in api/Makefile.in
		apps/Makefile.in client/Makefile.in db/Makefile.in
		db/mysql.h lib/Makefile.in sched/Makefile.in
		tools/Makefile.in

	These Makefile.in changes will allow the build to be performed
	outside the source tree.  This is convenient for several
	reasons.  The number one reason is that this allows the source
	tree to remain untouched by the build and therefore clean.
	This will prevent garbage build files from being checked in
	during a 'cvs commit'

	To run a build outside the source tree, simply make an object
	directory anywhere else that you would like to work, then just
	execute the configure script in the top-level boinc directory.
		$ mkdir boincobj
		$ cd boincobj
		$ <... path to source tree ...>/boinc/configure
		$ make > make.out 2>&1 &

	Note the examples in apps/Makefile.in and sched/Makefile.in
	of how to use the top_srcdir variable to locate include files
	in the source tree outside of the current directory.  Local
	references to other object files and libraries produced by
	the build remain as local .. references.

	The change to configure.in, (and thus configure) and db/mysql.h
	allow a proper identification of where the mysql .h files live.
	The SSL location of /usr/local/mysql/include is a bit non-standard.
	Most systems will have these in /usr/local/include/mysql

Hiram C.		Sat May 25 09:20:25 PDT 2002
	Continue updating:
	Makefile.in config.guess configure configure.in api/Makefile.in
	apps/Makefile.in client/Makefile.in client/config.guess
	client/configure client/configure.in sched/Makefile.in
	tools/Makefile.in

	I have almost clean builds now on Solaris, Mac OS X,
	and UnixWare.  There appears to be a missing sched_shmem.h
	file from the source tree.

	There is still cruft in this configure system.  I will continue
	to work on it to clean it up.

